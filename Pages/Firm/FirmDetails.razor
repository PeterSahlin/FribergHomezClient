@page "/Firm/FirmDetails/{Id:int}"
@using FribergHomezClient.Models
@inject NavigationManager navMan
@using System.Net.Http.Json
@inject HttpClient httpClient
@using System.Text.Json
@using System.Linq

@*Henrik*@
<div class="container">
    @if (firm != null)
    {
        <div class="card mb-4">
            <div class="card-header">
                <h1 class="card-title display-4">@firm.Name</h1>
            </div>
            <div class="card-body">
                <p class="card-text">@firm.Presentation</p>
            </div>
        </div>
        @if (agents != null && agents.Any())
        {
            <h4 class="mb-3 display-6" >Mäklare för @firm.Name</h4>
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
                @foreach (var agent in agents)
                {
                    <div class="col">
                        <div class="card">
                            <div class="row g-0">
                                <div class="col-md-4">
                                    <img src="@agent.ImageUrl" class="card-img" alt="Agent Image" style="max-width: 200px; height: 200px; object-fit: cover;">
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <h5 class="card-title">@agent.FullName</h5>
                                        <p class="card-text">Email: @agent.Email</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p>Hittade inga mäklare för denna firma...</p>
        }
                            <button class="btn btn-primary mt-2" style="background-color:#4F709C; border-color:#4F709C;" @onclick="ReturnToPreviousPage">Tillbaka till alla</button>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public Firm firm = new Firm();
    public List<RealEstateAgent> agents = new List<RealEstateAgent>();

    protected override async Task OnInitializedAsync()
    {
        var firmResponse = await httpClient.GetAsync($"/api/Firm/{Id}");
        if (firmResponse.IsSuccessStatusCode)
        {
            firm = await firmResponse.Content.ReadFromJsonAsync<Firm>();
        }
        var agentResponse = await httpClient.GetAsync($"/api/RealestateAgent");
        if (agentResponse.IsSuccessStatusCode)
        {
            var allAgents = await agentResponse.Content.ReadFromJsonAsync<List<RealEstateAgent>>();
            if(allAgents != null)
            {
                agents = allAgents.Where(agent => agent.FirmId == Id).ToList();
            }
        }

    }

    private void ReturnToPreviousPage()
    {
        navMan.NavigateTo("/Firm/ListAllFirms");
    }
}
