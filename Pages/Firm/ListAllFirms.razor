@page "/Firm/ListAllFirms"
@* @using FribergHomezClient.Models *@
@using System.Net.Http.Json
@using System.Text.Json
@using FribergHomezClient.Services.ModelService
@using FribergHomezClient.Services.Base
@using Microsoft.AspNetCore.Components.Authorization

@inject HttpClient httpClient
@inject NavigationManager navMan
@inject IJSRuntime JSRuntime
@inject IFirmService firmService



<script>
    window.confirmDelete = function () {
        return confirm('Är du säker på att du vill ta bort detta objekt?');
    }
</script>

@*Henrik*@
<PageTitle>Alla Mäklarfirmor</PageTitle>

<div class="container-fluid">
    <h1 class="mb-4">Alla Mäklarfirmor</h1>

    <div class="mb-3">
        <button class="btn btn-primary" @onclick="NavigateToAddNewFirmPage">Lägg till ny firma</button>
    </div>

    @if (Firms == null)
    {
        <p>Kunde inte hitta några mäklarfirmor...</p>
    }
    else
    {
        @foreach (var item in Firms)
        {
            @if (item.IsActive)
            {
                <div class="card mb-3">
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">@item.Name</h5>
                        <div>
                            <button class="btn btn-info mr-2" @onclick="@(e => NavigateToFirmDetails(item.Id))">Detaljer</button>
                            <button class="btn btn-warning mr-2" @onclick="@(e => NavigateToEditFirm(item.Id))">Redigera</button>
                            <button class="btn btn-danger" @onclick="@(e => NavigateToDeleteFirm(item.Id))">Ta bort</button>
                        </div>
                    </div>
                </div>
            }
        }
    }
</div>

@code {


    public List<Firm> Firms { get; set; } = new List<Firm>();


    protected override async Task OnInitializedAsync()
    {

        Response<List<Firm>> response = await firmService.GetFirmsAsync();

        Firms = response.Data;

    }

    private async Task NavigateToAddNewFirmPage()
    {
        navMan.NavigateTo("/Firm/AddFirm");
    }
    private void NavigateToFirmDetails(int id)
    {
        navMan.NavigateTo($"/Firm/FirmDetails/{id}");
    }
    private void NavigateToEditFirm(int id)
    {
        navMan.NavigateTo($"/Firm/EditFirm/{id}");
    }

    private async Task NavigateToDeleteFirm(int id)
    {
        
        if (await JSRuntime.InvokeAsync<bool>("confirmDelete"))
        {
            await firmService.DeleteFirmAsync(id);
            await OnInitializedAsync();
        }
    }
}
