@page "/Firm/ListAllFirms"
@* @using FribergHomezClient.Models *@
@using System.Net.Http.Json
@using System.Text.Json
@using FribergHomezClient.Services.ModelService
@using FribergHomezClient.Services.Base
@using Microsoft.AspNetCore.Components.Authorization

@inject HttpClient httpClient
@inject NavigationManager navMan
@inject IJSRuntime JSRuntime
@inject IFirmService firmService



<script>
    window.confirmDelete = function () {
        return confirm('Är du säker på att du vill ta bort detta objekt?');
    }
</script>

<Microsoft.AspNetCore.Components.Authorization.AuthorizeView Roles="Administrator">
    <Authorized>
        <PageTitle>Mäklarfirmor</PageTitle>

        <div class="container">
            <h1 class="display-4">Mäklarfirmor</h1>
            <br />
            <div class="mb-3">
                <button class="btn btn-primary" @onclick="NavigateToAddNewFirmPage">Lägg till ny firma</button>
            </div>

            @if (Firms == null)
            {
                <p>Couldn't load firms.</p>
            }
            else
            {
                @foreach (var item in Firms)
                {
                    @if (item.IsActive)
                    {
                        <div class="card mb-3">
                            <div class="row no-gutters">
                                <div class="col-md-2">
                                    <img src="@(item.ImageLocation.StartsWith("http") ? item.ImageLocation : "/images/" + item.ImageLocation)" class="card-img" alt="@item.Name" style="width:100%;" />
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <h5 class="card-title">@item.Name</h5>
                                        <p class="card-text" style="max-width: 700px;">@item.Presentation</p>
                                    </div>
                                </div>
                                <div class="col-md-2 d-flex align-items-center justify-content-end">
                                    <button class="btn btn-info mr-2" style="margin-right: 5px;" @onclick="@(e => NavigateToFirmDetails(item.Id))">Detaljer</button>
                                    <button class="btn btn-warning mr-2" style="margin-right: 5px;" @onclick="@(e => NavigateToEditFirm(item.Id))">Redigera</button>
                                    <button class="btn btn-danger" style="white-space: nowrap; margin-right: 5px;" @onclick="@(e => NavigateToDeleteFirm(item.Id))">Ta bort</button>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </Authorized>
</Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
@code {

    //PROPERTIES
    public List<Firm> Firms { get; set; } = new List<Firm>();

    //METHODS
    protected override async Task OnInitializedAsync()
    {

        Response<List<Firm>> response = await firmService.GetFirmsAsync();

        Firms = response.Data;

    }

    //add new firm
    private async Task NavigateToAddNewFirmPage()
    {
        navMan.NavigateTo("/Firm/AddFirm");
    }
    //firm details
    private void NavigateToFirmDetails(int id)
    {
        navMan.NavigateTo($"/Firm/FirmDetails/{id}");
    }
    //update firm
    private void NavigateToEditFirm(int id)
    {
        navMan.NavigateTo($"/Firm/EditFirm/{id}");
    }
    //delete firm
    private async Task NavigateToDeleteFirm(int id)
    {

        if (await JSRuntime.InvokeAsync<bool>("confirmDelete"))
        {
            await firmService.DeleteFirmAsync(id);
            await OnInitializedAsync();
        }
    }
}
