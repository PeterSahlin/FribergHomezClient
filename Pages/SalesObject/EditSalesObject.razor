@page "/SalesObject/EditSalesObject/{Id:int}"
@inject NavigationManager navMan
@using System.Net.Http.Json
@using System.Text.Json
@using FribergHomezClient.Services.Base
@using FribergHomezClient.Services.ModelService
@inject HttpClient httpClient
@inject ISaleObjectService saleObjectService
@inject ICategoryService categoryService
@inject IMunicipalityService municipalityService

<h3>Redigera försäljningsobjekt</h3>
@if (saleObject != null)
{
    <form @onsubmit="@(e => {UpdateStatus(StatusValue); UpdateSaleObject();  })">
    <div class="row mb-3">
        <div class="col-md-3">
            <input type="text" class="form-control" placeholder="Adress" @bind="saleObject.Address" required />
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Utgångspris" @bind="saleObject.StartingPrice" />
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Boarea" @bind="saleObject.LivingArea" />
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Biarea" @bind="saleObject.AncillaryArea" />
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Tomtarea" @bind="saleObject.PlotArea" />
        </div>
        <div class="col-md-3">
            <input type="text" class="form-control" placeholder="Beskrivning" @bind="saleObject.Description" />
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Antal rum" @bind="saleObject.NumberOfRooms" />
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Månadsavgift" @bind="saleObject.MonthlyFee" />
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Årsavgift" @bind="saleObject.OperatingCostPerYear" />
        </div>
        <div class="col-md-3">
            <input type="number" class="form-control" placeholder="Byggår" @bind="saleObject.YearOfConstruction" />
        </div>
        <div class="col-md-3">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Bildurl" @bind="addNewImgUrl" />
                <button type="button" class="btn btn-primary" @onclick="AddImgUrl">Lägg till bild</button>
            </div>
            @if (showPopup)
            {
                <div class="popup">
                    <span class="popuptext">Bild tillagd!</span>
                </div>
            }
        </div>
        <div class="col-md-3"></div>
    </div>

    <div class="row mb-3">
        @foreach (var image in saleObject.ImageUrl)
        {
            <div class="col-md-3 mb-3">
                <div class="image-container">
                    <img class="img-fluid" src="@image" alt="Image" />
                    <button type="button" class="btn btn-danger btn-sm mt-2" @onclick="() => RemoveImgUrl(image)">Remove</button>
                </div>
            </div>
        }
    </div>

    <div class="row mb-3">
        <div class="col-auto">
            <input class="btn-check mb-3" type="radio" id="activeRadio" name="status" value="1" @onclick="@(e => StatusValue = 1)">
            <label class="btn btn-outline-success btn-sm" for="activeRadio">Aktiv</label>
        </div>
        <div class="col-auto">
            <input type="radio" class="btn-check" id="inactiveRadio" name="status" value="0" @onclick="@(e => StatusValue = 0)">
            <label class="btn btn-outline-danger btn-sm" for="inactiveRadio">Inaktiv</label>
        </div>
    </div>

    @if (showStatusPopup)
    {

        <div class="popup">
            <span class="popuptext" style="color:red;">Du måste göra ett val.</span>
        </div>
    }

    <div class="row mb-3">
        <div class="col-md-6">
            <button class="btn btn-success me-2" type="submit" @* @onclick="UpdateSaleObject *@">Spara</button>
            <button class="btn btn-danger" @onclick="ReturnToListAll">Avbryt</button>
        </div>
    </div>
    </form>
}
@code {


    public SalesObjectDto saleObject = new SalesObjectDto();
    public SalesObjectDto newSaleObject;
    [Parameter]
    public int Id { get; set; }
    public List<Category>? Categories = new List<Category>();
    public List<Municipality>? Municipalities = new List<Municipality>();
    public List<RealEstateAgent>? RealEstateAgents = new List<RealEstateAgent>();
    public List<string> newImgUrl = new List<string>();
    private string addNewImgUrl;
    private bool showPopup = false;
    private bool showStatusPopup = false;
    public required int StatusValue { get; set; } = 2;


    protected override async Task OnInitializedAsync()
    {
        var saleObjectResponse = await saleObjectService.GetSaleObjectByIdAsync(Id);
        if (saleObjectResponse.Success)
        {
            saleObject = new SalesObjectDto
                {
                    Id = saleObjectResponse.Data.Id,
                    Address = saleObjectResponse.Data.Address,
                    StartingPrice = saleObjectResponse.Data.StartingPrice,
                    LivingArea = saleObjectResponse.Data.LivingArea,
                    AncillaryArea = saleObjectResponse.Data.AncillaryArea,
                    PlotArea = saleObjectResponse.Data.PlotArea,
                    Description = saleObjectResponse.Data.Description,
                    NumberOfRooms = saleObjectResponse.Data.NumberOfRooms,
                    MonthlyFee = saleObjectResponse.Data.MonthlyFee,
                    OperatingCostPerYear = saleObjectResponse.Data.OperatingCostPerYear,
                    YearOfConstruction = saleObjectResponse.Data.YearOfConstruction,
                    CategoryId = saleObjectResponse.Data.CategoryId,
                    RealEstateAgentId = saleObjectResponse.Data.RealEstateAgentId,
                    MunicipalityId = saleObjectResponse.Data.MunicipalityId,
                    ImageUrl = saleObjectResponse.Data.ImageUrl,
                    IsActive = saleObjectResponse.Data.IsActive
                };
        }

        //var categoryResponse = await httpClient.GetAsync("/api/Category");
        var categoryResponse = await categoryService.GetCategoriesAsync();
        if (categoryResponse.Success)
        {
            Categories = categoryResponse.Data;
        }
        // var municipalityResponse = await httpClient.GetAsync("/api/municipalities");
        var municipalityResponse = await municipalityService.GetMunicipalitiesAsync();
        if (municipalityResponse.Success)
        {
            Municipalities = municipalityResponse.Data;
        }
        var agentResponse = await httpClient.GetAsync("/api/RealEstateAgent");
        if (agentResponse.IsSuccessStatusCode)
        {
            RealEstateAgents = await agentResponse.Content.ReadFromJsonAsync<List<RealEstateAgent>>();
        }
    }
    private async void AddImgUrl()
    {
        if (!string.IsNullOrEmpty(addNewImgUrl))
        {
            newImgUrl.Add(addNewImgUrl);
            addNewImgUrl = string.Empty;
            showPopup = true;
            await Task.Delay(1000);
            showPopup = false;
            StateHasChanged();
        }
    }
    private async Task UpdateSaleObject()
    {
        newSaleObject = saleObject;
        try
        {
            await saleObjectService.UpdateSaleObjectAsync(newSaleObject);
            navMan.NavigateTo("/SalesObject/ListAllSalesObjects");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
    private void RemoveImgUrl(string imageUrl)
    {
        saleObject.ImageUrl.Remove(imageUrl);
    }
    private void ReturnToListAll()
    {
        navMan.NavigateTo("/SalesObject/ListAllSalesObjects");
    }
    public void UpdateStatus(int value)
    {

        if (value == 0)
        {
            saleObject.IsActive = false;
        }
        else if (value == 1)
        {
            saleObject.IsActive = true;
        }
    }

}
<style>
    .saleObjectImage {
        max-width: 100px;
        height: auto;
    }

    .popup {
        position: fixed;
        bottom: 50px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #f1f1f1;
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        z-index: 9999;
    }

        .popup .popuptext {
            color: #333;
        }

    .img-fluid{
        max-width: 100px;
        height: auto;
    }
</style>
