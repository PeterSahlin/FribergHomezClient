@page "/RealEstateAgent/AddRealEstateAgent"
@using System.Net.Http.Json
@using System.Text.Json
@using FribergHomezClient.Services.Base
@using FribergHomezClient.Services.ModelService
@inject HttpClient httpClient
@inject NavigationManager navMan
@inject IJSRuntime JSRuntime

@inject IFirmService firmService
@inject IRealEstateAgentService realEstateAgentService


@*Peter*@

<PageTitle>Lägg till mäklare</PageTitle>


<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card" style="height:auto; padding-left:50px; padding-right:50px; padding-top:20px; padding-bottom:20px; ">
                <h3>Lägg till mäklare</h3>
                <form @onsubmit="@(e => {UpdateStatus(StatusValue); AddRealEstateAgentAsync();  })">
                    <div>
                        <label for="firstname">Förnamn:</label>
                        <input type="text" class="form-control mb-3" id="firstname" @bind="NewRealEstateAgent.FirstName" />
                    </div>
                    <div>
                        <label for="lastname">Efternamn:</label>
                        <input type="text" class="form-control mb-3" id="lastname" @bind="NewRealEstateAgent.LastName" />
                    </div>
                    <div>
                        <label for="email">E-post:</label>
                        <input type="text" class="form-control mb-3" id="email" @bind="NewRealEstateAgent.Email" />
                    </div>
                    <div>
                        <label for="phonenumber">Telefonnummer:</label>
                        <input type="text" class="form-control mb-3" id="phonenumber" @bind="NewRealEstateAgent.PhoneNumber" />
                    </div>
                    <div>
                        <label for="password">Lösenord:</label>
                        <input type="text" class="form-control mb-3" id="password" @bind="NewRealEstateAgent.Password" />
                    </div>
                    <div>
                        <label for="imageurl">Bildlänk:</label>
                        <input type="text" class="form-control mb-3" id="imageurl" @bind="NewRealEstateAgent.ImageUrl" />
                    </div>
                    <div>
                        <label for="firmDropDown">Mäklarfirma:</label>
                        <select id="firmDropDown" class="btn btn-secondary btn-sm dropdown-toggle mt-3 mb-3" @bind="NewRealEstateAgent.FirmId">
                            <option>Välj mäklarfirma</option>
                            @foreach (var firm in FirmList)
                            {
                                <option value="@firm.Id">@firm.Name</option>
                            }
                        </select>
                    </div>
                    <div class="row mt-3 mb-3">
                        <div class="col-auto">
                            <input class="btn-check mb-3" type="radio" id="activeRadio" name="status" value="1" @onclick="@(e => StatusValue = 1)">
                            <label class="btn btn-outline-success btn-sm" for="activeRadio">Aktiv</label>
                        </div>
                        <div class="col-auto">
                            <input type="radio" class="btn-check" id="inactiveRadio" name="status" value="0" @onclick="@(e => StatusValue = 0)">
                            <label class="btn btn-outline-danger btn-sm" for="inactiveRadio">Inaktiv</label>
                        </div>
                    </div>
                    @* <button @onclick="AddRealEstateAgentAsync">Spara</button> *@

                    <button class="btn btn-success" type="submit">Skapa mäklare</button>

                    <button class="btn btn-danger" @onclick="BackButton">Avbryt</button>
                </form>
            </div>
        </div>
    </div>
</div>



@code {
    public string newImgUrl { get; set; }
    public List<Firm> FirmList { get; set; } = new List<Firm>();
    public AgentDto NewRealEstateAgent { get; set; } = new AgentDto();
    public required int StatusValue { get; set; } = 2;
    // public Firm NewAgentFirm { get; set; }





    protected override async Task OnInitializedAsync()
    {

        //Response<List<Firm>> response = await firmService.GetFirmsAsync();

       

        // var response = await httpClient.GetAsync("api/Firm");
        var response = await firmService.GetFirmsAsync();

        if (response.Success)
        {
            FirmList = response.Data.Where(s => s.IsActive == true).ToList();
        }

    }

    public async Task AddRealEstateAgentAsync()
    {
        var agentToAdd = NewRealEstateAgent;
        if (agentToAdd.FirmId != null)
        {
            // var agentFirmResponse = await httpClient.GetAsync($"/api/Firm/{agentToAdd.FirmId}");

            var agentFirmResponse = await firmService.GetFirmByIdAsync(Convert.ToInt32(agentToAdd.FirmId));

            if (agentFirmResponse.Success)
            {
                agentToAdd.Firm = agentFirmResponse.Data;

            }
        }


        
        try
        {
        // var addNewAgentResponse = await httpClient.PostAsJsonAsync("/api/RealEstateAgent", agentToAdd);
        await realEstateAgentService.CreateRealEstateAgentAsync(agentToAdd);
        navMan.NavigateTo("/RealEstateAgent/ListAllRealEstateAgents");
        }
         catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }




    }
    public void UpdateStatus(int value)
    {

        if (value == 0)
        {
            NewRealEstateAgent.IsActive = false;
        }
        else if (value == 1)
        {
            NewRealEstateAgent.IsActive = true;
        }
        // var value = Convert.ToInt32(e.Value);
        // switch (value)
        // {
        //     case 0:
        //         CurrentRealEstateAgent.IsActive = false;
        //         break;
        //     case 1:
        //         CurrentRealEstateAgent.IsActive = true;
        //         break;
        // }

    }
    public async Task BackButton()
    {

        await JSRuntime.InvokeVoidAsync("history.back");
    }
}
