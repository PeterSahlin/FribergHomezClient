@page "/RealEstateAgent/ListAllRealEstateAgents"
@using FribergHomezClient.Components
@using System.Net.Http.Json
@using System.Text.Json

@using FribergHomezClient.Services.Base
@using FribergHomezClient.Services.ModelService
@inject IJSRuntime JSRuntime
@inject HttpClient httpClient
@inject NavigationManager navMan
@inject IFirmService firmService

@inject IRealEstateAgentService realEstateAgentService

<script>
    window.confirmDelete = function () {
        return confirm('Är du säker på att du vill ta bort den valda mäklaren?');
    }
</script>


@if (AllAgentList == null)
{
    <p>Can't find Real estate agents.</p>
}
else
{
    <div class="container">
    <Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
        <NotAuthorized>
            <h1 class="display-4">Våra mäklare</h1>     
                <br />
        </NotAuthorized>
    </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>

    <Microsoft.AspNetCore.Components.Authorization.AuthorizeView Roles="Administrator">
        <Authorized>
            <h1 class="display-4">Aktiva mäklare</h1>
                <br />
      
            <div class="d-flex justify-content-between align-items-center mb-3">

                <button class="btn btn-primary" @onclick="NavigateToAddRealEstateAgentPage">Lägg till mäklare</button>
            </div>

        </Authorized>
    </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
    @*endast visas om inloggad/admin. Flytta upp till "if".*@


    @*ACTIVE AGENTS TABLES*@

    @*kedjekamrater firm agents*@
    <h3 class="display-6">Kedjekamrater Fastighetsmäkleri</h3>
    <hr style="margin-top:1px;" />
    <div class="row row-cols-1 row-cols-md-3 g-4 d-flex align-items-stretch">
        @foreach (var item in KedjekamraterAgentList)
        {
            if (item.IsActive == true)
            {
                <div class="col">
                        <div class="card" style="height:450px; ">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@item.ImageUrl" class="card-img" alt="@item.FirstName @item.LastName" style="max-width: 100%; max-height: 100%; object-fit: cover;" />
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@item.FirstName @item.LastName</h5>
                                    <p class="card-text"><b>E-post:</b> @item.Email</p>
                                    <p class="card-text"><b>Telefonnummer:</b> @item.PhoneNumber</p>
                                        
                                    <p class="card-text"><b>Mäklarfirma:</b>@item.Firm.Name</p>
                                        <img src="@(item.Firm.ImageLocation.StartsWith("http") ? item.Firm.ImageLocation : "/images/" + item.Firm.ImageLocation)" style="width:120px;" />
                                    @*     <p class="card-text">Status: Aktiv</p>  *@
                                </div>
                            </div>
                        </div>
                        <div class="row g-0 mt-auto">
                            <div class="col text-center py-3">
                                <Microsoft.AspNetCore.Components.Authorization.AuthorizeView Roles="Administrator">
                                    <Authorized>
                                        <button class="btn btn-info" @onclick="@(e => NavigateToRealEstateAgentDetails(item.Id))">Detaljer</button>
                                        <button class="btn btn-warning" @onclick="@(e => NavigateToEditRealEstateAgent(item.Id))">Redigera</button>
                                        <button class="btn btn-danger" @onclick="@(e => SetAgentInactive(item.Id))">Ta bort</button>
                                    </Authorized>
                                </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    <br />
    <br />




    @*raka puckar firm agents*@
    <h3 class="display-6">Raka Puckar Fastighetsförmedling</h3>
    <hr style="margin-top:1px;" />
    <div class="row row-cols-1 row-cols-md-3 g-4 d-flex align-items-stretch">
        @foreach (var item in RakaPuckarAgentList)
        {
            if (item.IsActive == true)
            {
                <div class="col">
                        <div class="card" style="height:450px; ">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@item.ImageUrl" class="card-img" alt="@item.FirstName @item.LastName" style="max-width: 100%; max-height: 100%; object-fit: cover;" />
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@item.FirstName @item.LastName</h5>
                                    <p class="card-text"><b>E-post: @item.Email</b></p>
                                    <p class="card-text"><b>Telefonnummer:</b> @item.PhoneNumber</p>
                                    <p class="card-text"><b>Mäklarfirma:</b> @item.Firm.Name</p>
                                        <img src="@(item.Firm.ImageLocation.StartsWith("http") ? item.Firm.ImageLocation : "/images/" + item.Firm.ImageLocation)" style="width:120px;" />

                                    @*     <p class="card-text">Status: Aktiv</p>  *@
                                </div>
                            </div>
                        </div>
                        <div class="row g-0 mt-auto">
                            <div class="col text-center py-3">
                                <Microsoft.AspNetCore.Components.Authorization.AuthorizeView Roles="Administrator">
                                    <Authorized>
                                        <button class="btn btn-info" @onclick="@(e => NavigateToRealEstateAgentDetails(item.Id))">Detaljer</button>
                                        <button class="btn btn-warning" @onclick="@(e => NavigateToEditRealEstateAgent(item.Id))">Redigera</button>
                                        <button class="btn btn-danger" @onclick="@(e => SetAgentInactive(item.Id))">Ta bort</button>
                                    </Authorized>
                                </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    <br />
    <br />

    @*slagskott firm agent table*@
    <h3 class="display-6">Slagskott & Slott Mäklartjänst</h3>
    <hr style="margin-top:1px;" />
    <div class="row row-cols-1 row-cols-md-3 g-4 d-flex align-items-stretch">
        @foreach (var item in SlagskottAgentList)
        {
            if (item.IsActive == true)
            {
                <div class="col">
                    <div class="card" style="height:450px; ">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@item.ImageUrl" class="card-img" alt="@item.FirstName @item.LastName" style="max-width: 100%; max-height: 100%; object-fit: cover;" />
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@item.FirstName @item.LastName</h5>
                                    <p class="card-text"><b>E-post:</b> @item.Email</p>
                                    <p class="card-text"><b>Telefonnummer:</b> @item.PhoneNumber</p>
                                    <p class="card-text"><b>Mäklarfirma:</b> @item.Firm.Name</p>
                                        <img src="@(item.Firm.ImageLocation.StartsWith("http") ? item.Firm.ImageLocation : "/images/" + item.Firm.ImageLocation)" style="width:120px;" />

                                    @*     <p class="card-text">Status: Aktiv</p>  *@
                                </div>
                            </div>
                        </div>
                        <div class="row g-0 mt-auto">
                            <div class="col text-center py-3">
                                <Microsoft.AspNetCore.Components.Authorization.AuthorizeView Roles="Administrator">
                                    <Authorized>
                                        <button class="btn btn-info" @onclick="@(e => NavigateToRealEstateAgentDetails(item.Id))">Detaljer</button>
                                        <button class="btn btn-warning" @onclick="@(e => NavigateToEditRealEstateAgent(item.Id))">Redigera</button>
                                        <button class="btn btn-danger" @onclick="@(e => SetAgentInactive(item.Id))">Ta bort</button>
                                    </Authorized>
                                </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
                            </div>
                            <br />
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    <br />
    <br />





    @*INACTIVE AGENT TABLE*@

    <Microsoft.AspNetCore.Components.Authorization.AuthorizeView Roles="Administrator">
        <Authorized>

            <h1 class="display-4">Inaktiva mäklare</h1>

            <div class="row row-cols-1 row-cols-md-3 g-4 d-flex align-items-stretch">
                @foreach (var item in InactiveAgentList)
                {
                    if (item.IsActive == false)
                    {
                        <div class="col">
                            <div class="card" style="height:auto; ">
                                <div class="row g-0">
                                    <div class="col-md-4">
                                        <img src="@item.ImageUrl" class="card-img" alt="@item.FirstName @item.LastName" style="max-width: 100%; max-height: 100%; object-fit: cover;" />
                                    </div>
                                    <div class="col-md-8">
                                        <div class="card-body">
                                            <h5 class="card-title">@item.FirstName @item.LastName</h5>
                                            <p class="card-text"><b>E-post:</b> @item.Email</p>
                                            <p class="card-text"><b>Telefonnummer:</b> @item.PhoneNumber</p>
                                            <p class="card-text"><b>Mäklarfirma:</b> @item.Firm.Name</p>
                                                <img src="@(item.Firm.ImageLocation.StartsWith("http") ? item.Firm.ImageLocation : "/images/" + item.Firm.ImageLocation)" style="width:120px;" />

                                            @*     <p class="card-text">Status: Aktiv</p>  *@
                                        </div>
                                    </div>
                                </div>
                                <div class="row g-0 mt-auto">
                                    <div class="col text-center py-3">
                                        <button class="btn btn-info" @onclick="@(e => NavigateToRealEstateAgentDetails(item.Id))">Detaljer</button>

                                        <button class="btn btn-warning" @onclick="@(e => NavigateToEditRealEstateAgent(item.Id))">Redigera</button>

                                        <button class="btn btn-danger" @onclick="@(e => NavigateToDeleteInactiveRealEstateAgent(item.Id))">Ta bort</button>
                                    </div>
                                    <br />
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </Authorized>
    </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
    </div>
}



@code {

    //PROPERTIES
    public List<RealEstateAgent> AllAgentList = new List<RealEstateAgent>();
    public List<RealEstateAgent> ActiveAgentList = new List<RealEstateAgent>();
    public List<RealEstateAgent> InactiveAgentList = new List<RealEstateAgent>();
    public List<RealEstateAgent> KedjekamraterAgentList = new List<RealEstateAgent>();
    public List<RealEstateAgent> SlagskottAgentList = new List<RealEstateAgent>();
    public List<RealEstateAgent> RakaPuckarAgentList = new List<RealEstateAgent>();
    private int selectedAgentId;



    //METHODS
    protected override async Task OnInitializedAsync()
    {

        Response<List<RealEstateAgent>> response = await realEstateAgentService.GetRealEstateAgentsAsync();
        if (response.Success)
        {
            AllAgentList = response.Data;
            ActiveAgentList = AllAgentList.Where(r => r.IsActive == true).ToList();
            InactiveAgentList = AllAgentList.Where(r => r.IsActive == false).OrderBy(r => r.Firm.Name).ToList();
            KedjekamraterAgentList = AllAgentList.Where(r => r.Firm.Name.Contains("Kedjekamrater")).ToList();
            RakaPuckarAgentList = AllAgentList.Where(r => r.Firm.Name.Contains("Raka")).ToList();
            SlagskottAgentList = AllAgentList.Where(r => r.Firm.Name.Contains("Slagskott")).ToList();

        }
    }

    //add agent
    private void NavigateToAddRealEstateAgentPage()
    {
        navMan.NavigateTo("/RealEstateAgent/AddRealEstateAgent");

    }

    //agent details
    private void NavigateToRealEstateAgentDetails(string id)
    {
        navMan.NavigateTo($"/RealEstateAgent/RealEstateAgentDetails/{id}");
    }

    //edit agent
    private void NavigateToEditRealEstateAgent(string id)
    {
        navMan.NavigateTo($"/RealEstateAgent/EditRealEstateAgent/{id}");
    }


    //delete agent by setting inactive
    public async Task SetAgentInactive(string id)
    {
        if (await JSRuntime.InvokeAsync<bool>
        ("confirmDelete"))
        {
            await realEstateAgentService.DeleteRealEstateAgentAsync(id);
            await OnInitializedAsync();
        }
    }


    //delete inactive agent permanently
    private async Task NavigateToDeleteInactiveRealEstateAgent(string id)
    {
        if (await JSRuntime.InvokeAsync<bool>
        ("confirmDelete"))
        {
            await realEstateAgentService.DeleteAsync(id);
            await OnInitializedAsync();
        }
    }
}


