@page "/Category"
@using FribergHomezClient.Models
@using System.Net.Http.Json
@using System.Text.Json
@inject HttpClient httpClient

<PageTitle>Category</PageTitle>

<h1>Categories</h1>



@if (CategoryList == null)
{
    <p>Can't find Categories'</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in CategoryList)
            {
                <tr>
                    <td>@item.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

//code
@code {
    public List<Category>? CategoryList;


    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetAsync("/api/category");
        if(response.IsSuccessStatusCode)
        {
            
            CategoryList = await response.Content.ReadFromJsonAsync<List<Category>>();
        }

    }

  

        // HttpResponseMessage response = await httpClient.GetAsync("/api/category");

        // if (response.IsSuccessStatusCode)
        // {
        //     string jsonContent = await response.Content.ReadAsStringAsync();

        //     categories = JsonSerializer.Deserialize<List<Category>>(jsonContent);
        // }
    // private WeatherForecast[]? forecasts;

    // protected override async Task OnInitializedAsync()
    // {
    //     forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    // }

    // public class WeatherForecast
    // {
    //     public DateOnly Date { get; set; }

    //     public int TemperatureC { get; set; }

    //     public string? Summary { get; set; }

    //     public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    // }
}
