@page "/Municipality/EditMunicipality/{Id:int}"
@using FribergHomezClient.Services.Base
@inject NavigationManager navMan
@using System.Net.Http.Json
@using System.Text.Json
@using FribergHomezClient.Services.ModelService
@inject HttpClient httpClient
@inject IMunicipalityService municipalityService


<div class="container">
    <h1 class="mb-4">Redigera kommun</h1>
    @if (CurrentMunicipality != null)
    {
        <form @onsubmit="UpdateMunicipality">
            <div class="col-md-3 mb-3">
                <label for="Name">Namn</label>
                <input type="text" class="form-control" id="name" @bind="CurrentMunicipality.Name" required />
            </div>

            <div>
                <button type="submit" class="btn btn-success" style="background-color:#4F6F52; border-color:#4F6F52;">Spara</button>
                <button type="button" class="btn btn-danger" style="background-color:#B73E3E; border-color:#B73E3E;" onclick="window.history.back();">Avbryt</button>
            </div>
        </form>
    }
</div>
@code {
    [Parameter]
    public int Id { get; set; }
    public Municipality CurrentMunicipality = new Municipality();
    public Municipality newMunicipality;


    protected override async Task OnInitializedAsync()
    {
        Response <Municipality> response = await municipalityService.GetMunicipalityByIdAsync(Id);
        if (response.Success)
        {
            CurrentMunicipality = response.Data;
        }


    }

    private async Task UpdateMunicipality()
    {
        newMunicipality = CurrentMunicipality;
        try
        {

            await municipalityService.UpdateMunicipalityAsync(newMunicipality);
            navMan.NavigateTo("/Municipality/ListAllMunicipalities");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
