@page "/Municipality/EditMunicipality/{Id:int}"
@using FribergHomezClient.Models
@inject NavigationManager navMan
@using System.Net.Http.Json
@using System.Text.Json
@inject HttpClient httpClient


<div class="container">
    <h1 class="mb-4">Redigera kommun</h1>
    @if (CurrentMunicipality != null)
    {
        <form @onsubmit="UpdateMunicipality">
            <div class="col-md-3 mb-3">
                <label for="Name">Namn</label>
                <input type="text" class="form-control" id="name" @bind="CurrentMunicipality.Name" required />
            </div>

            <div>
                <button type="submit" class="btn btn-success" >Spara</button>
                <button type="button" class="btn btn-danger" onclick="window.history.back();">Avbryt</button>
            </div>
        </form>
    }
</div>
@code {
    [Parameter]
    public int Id { get; set; }
    public Municipality CurrentMunicipality = new Municipality();
    public Municipality newMunicipality;


    protected override async Task OnInitializedAsync()
    {
        var municipalityResponse = await httpClient.GetAsync($"/api/municipalities/{Id}");
        if (municipalityResponse.IsSuccessStatusCode)
        {
            CurrentMunicipality = await municipalityResponse.Content.ReadFromJsonAsync<Municipality>();
        }

    }

    private async Task UpdateMunicipality()
    {
        newMunicipality = CurrentMunicipality;
        try
        {
            var response = await httpClient.PutAsJsonAsync($"/api/municipalities", newMunicipality);
            if (response.IsSuccessStatusCode)
            {
                navMan.NavigateTo("/Municipality/ListAllMunicipalities");
            }
            else
            {
                Console.WriteLine("Kunde inte uppdatera kommun");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
}
