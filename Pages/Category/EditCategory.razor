@page "/Category/EditCategory/{Id:int}"
@using FribergHomezClient.Models
@inject NavigationManager navMan
@using System.Net.Http.Json
@using System.Text.Json
@inject HttpClient httpClient
@inject NavigationManager navMan

@*Henrik*@
<div class="container">
    <h3 class="mb-4">Redigera Kategori</h3>

    @if (category != null)
    {
        <form @onsubmit="UpdateCategory">
            <div class="mb-3">
                <input type="text" id="Name" class="form-control" @bind="category.Name" required placeholder="Namn" style="max-width: 500px;"/>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <button type="submit" class="btn btn-success me-2">Spara</button>
                    <button class="btn btn-danger" @onclick="ReturnToPreviousPage">Avbryt</button>
                </div>
            </div>
        </form>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    public Category category = new Category();
    public Category newCategory;

    protected override async Task OnInitializedAsync()
    {
        var categoryResponse = await httpClient.GetAsync($"/api/Category/{Id}");
        if (categoryResponse.IsSuccessStatusCode)
        {
            category = await categoryResponse.Content.ReadFromJsonAsync<Category>();
        }
    }

    private async Task UpdateCategory()
    {
        newCategory = category;
        try
        {
            var response = await httpClient.PutAsJsonAsync($"/api/Category/{newCategory.Id}", newCategory);
            if (response.IsSuccessStatusCode)
            {
                navMan.NavigateTo("/Category/ListAllCategories");
            }
            else
            {
                Console.WriteLine("Kunde inte uppdatera kategori");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
    private void ReturnToPreviousPage()
    {
        navMan.NavigateTo("/Category/ListAllCategories");
    }

}
