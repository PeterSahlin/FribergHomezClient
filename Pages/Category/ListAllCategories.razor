@page "/Category/ListAllCategories"
@* @using FribergHomezClient.Models *@
@using System.Net.Http.Json
@using System.Text.Json
@using FribergHomezClient.Services.ModelService
@using FribergHomezClient.Services.Base
@using Microsoft.AspNetCore.Components.Authorization

@inject HttpClient httpClient
@inject NavigationManager navMan
@inject IJSRuntime JSRuntime
@inject ICategoryService categoryService

<script>
    window.confirmDelete = function () {
        return confirm('Är du säker på att du vill ta bort detta objekt?');
    }
</script>

@*Henrik*@
<PageTitle>Kategorier</PageTitle>

<div class="container-fluid">
    <h1 class="mb-4">Kategorier</h1>

    <div class="mb-3">
        <button class="btn btn-primary" @onclick="@(e => NavigateToAddCategoryPage())">Lägg till ny kategori</button>
    </div>

    @if (CategoryList == null)
    {
        <p> Kunde inte hitta några kategorier...</p>
    }
    else
    {
        <thead>
            <tr>
                <th>Namn</th>
            </tr>
        </thead>
        @foreach (var item in CategoryList)
        {
            <div class="card mb-3">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">@item.Name</h5>
                    <div>
                        <button class="btn btn-warning mr-2" @onclick="@(e => NavigateToEditCategoryPage(item.Id))">Redigera</button>
                        <button class="btn btn-danger" @onclick="@(e => NavigateToDeleteCategory(item.Id))">Ta bort</button>
                    </div>
                </div>
            </div>
        }
    }
</div>


@code {
    public List<Category>? CategoryList;


    protected override async Task OnInitializedAsync()
    {
        Response<List<Category>> response = await categoryService.GetCategoriesAsync();

        CategoryList = response.Data;

    }
    private void NavigateToAddCategoryPage()
    {
        navMan.NavigateTo("/Category/AddCategory");

    }
    private void NavigateToEditCategoryPage(int id)
    {
        navMan.NavigateTo($"/Category/EditCategory/{id}");
    }

    private async Task NavigateToDeleteCategory(int id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirmDelete"))
        {
            await httpClient.DeleteAsync($"/api/Category/{id}");
            await OnInitializedAsync();
        }
    }

}
