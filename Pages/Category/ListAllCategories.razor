@page "/Category/ListAllCategories"
@* @using FribergHomezClient.Models *@
@using System.Net.Http.Json
@using System.Text.Json
@using FribergHomezClient.Services.ModelService
@using FribergHomezClient.Services.Base
@using Microsoft.AspNetCore.Components.Authorization

@inject HttpClient httpClient
@inject NavigationManager navMan
@inject IJSRuntime JSRuntime
@inject ICategoryService categoryService

<script>
    window.confirmDelete = function () {
        return confirm('Är du säker på att du vill ta bort detta objekt?');
    }
</script>


<PageTitle>Kategorier</PageTitle>

<div class="container">
    <h1 class="display-4">Kategorier</h1>
    <br />
    <div class="d-flex justify-content-between align-items-center mb-3">
        <button class="btn btn-primary" style="background-color:#4F709C; border-color:#4F709C;" @onclick="@(e => NavigateToAddCategoryPage())">Lägg till ny kategori</button>
    </div>

    @if (CategoryList == null)
    {
        <p> Kunde inte hitta några kategorier...</p>                                                           
    }
    else
    {
        <div class="table-responsive">

                <tr>
                    <th>Namn</th>
                 
                </tr>
    
     
                @foreach (var item in CategoryList)
                {
                    <div class="card mb-3">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0">@item.Name</h5>
                            <div>
                            <button class="btn btn-primary mr-2" style="background-color:#4F709C; border-color:#4F709C;" @onclick="@(e => NavigateToEditCategoryPage(item.Id))">Redigera</button>
                            <button class="btn btn-danger" style="background-color:#B73E3E; border-color:#B73E3E;" @onclick="@(e => NavigateToDeleteCategory(item.Id))">Ta bort</button>
                            </div>
                        </div>
                    </div>
                }

        </div>
    }
</div>


@code {
    public List<Category>? CategoryList;


    protected override async Task OnInitializedAsync()
    {
        Response<List<Category>> response = await categoryService.GetCategoriesAsync();

        CategoryList = response.Data;

    }
    private void NavigateToAddCategoryPage()
    {
        navMan.NavigateTo("/Category/AddCategory");

    }
    private void NavigateToEditCategoryPage(int id)
    {
        navMan.NavigateTo($"/Category/EditCategory/{id}");
    }

    private async Task NavigateToDeleteCategory(int id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirmDelete"))
        {
            await httpClient.DeleteAsync($"/api/Category/{id}");
            await OnInitializedAsync();
        }
    }

}
