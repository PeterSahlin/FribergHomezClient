@page "/Category/ListAllCategories"

@using FribergHomezClient.Models
@using System.Net.Http.Json
@using System.Text.Json
@inject HttpClient httpClient
@inject NavigationManager navMan

@*Henrik*@
<PageTitle>Category</PageTitle>

<h1>Categories</h1>

<td><button @onclick="@(e => NavigateToAddCategoryPage())">Lägg till ny kategori</button></td>

@if (CategoryList == null)
{
    <p>Can't find Categories'</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in CategoryList)
            {
                <tr>
                    <td>@item.Name</td>
                    <td><button @onclick="@(e => NavigateToEditCategoryPage(item.Id))">Redigera</button></td>
                    <td><button @onclick="@(e => NavigateToDeleteCategory(item.Id))">Ta bort</button></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    public List<Category>? CategoryList;


    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetAsync("/api/category");
        if(response.IsSuccessStatusCode)
        {
            CategoryList = await response.Content.ReadFromJsonAsync<List<Category>>();
        }

    }
    private void NavigateToAddCategoryPage()
    {
        navMan.NavigateTo("/Category/AddCategory");

    }
    private void NavigateToEditCategoryPage(int id)
    {
        navMan.NavigateTo($"/Category/EditCategory/{id}");
    }

    private async Task NavigateToDeleteCategory(int id)
    {
        await httpClient.DeleteAsync($"/api/Category/{id}");
        await OnInitializedAsync();
    }

}
